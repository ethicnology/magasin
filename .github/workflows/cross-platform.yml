name: cross-platform-builds
on:
  push:
    branches:
      - main
env:
  APP_NAME: magasin

jobs:
  ios:
    runs-on: macos-15
    
    steps:
    - uses: actions/checkout@v5
    - run: make init
    - run: make ios-pod-update

    - run: fvm flutter build ios --release --no-codesign

    - name: Package .app into .ipa
      run: |
        mkdir -p Payload
        cp -R build/ios/iphoneos/Runner.app Payload/
        zip -r Runner.ipa Payload
        rm -rf Payload    
    
    - name: Upload iOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-ios.ipa
        path: Runner.ipa

  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - run: make init

      - run: fvm flutter build apk --release --split-per-abi

      - name: Upload arm64-v8a APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-arm64-v8a.apk
          path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk

      - name: Upload armeabi-v7a APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-armeabi-v7a.apk
          path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk

      - name: Upload x86_64 APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-x86_64.apk
          path: build/app/outputs/flutter-apk/app-x86_64-release.apk


  # linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #     - run: |
  #           sudo apt-get update -y
  #           sudo apt-get install -y ninja-build libgtk-3-dev
  #     - run: flutter config --enable-linux-desktop
  #     - run: flutter build linux --release
  #     - name: Upload artifact 
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: linux_x64_${{ env.APP_NAME }}
  #         path: build/linux/x64/release/bundle

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #     - run: flutter config --enable-windows-desktop
  #     - run: flutter build windows --release
  #     - name: Upload artifact 
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows_x64_${{ env.APP_NAME }}
  #         path: build\windows\x64\runner\Release

  # ios:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: subosito/flutter-action@v2
  #     with:
  #       channel: 'stable'
  #       architecture: x64
  #   - run: flutter pub get
  #   - name: Build no-codesign release
  #     run: flutter build ios --release --no-codesign
  #   - name: Upload artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: ios_${{ env.APP_NAME }}
  #       path: build/ios/iphoneos/Runner.app

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         architecture: x64
  #     - run: flutter config --enable-macos-desktop
  #     - run: flutter build macos --release
  #     - name: Create DMG
  #       run: |
  #         hdiutil create -format UDZO -srcfolder build/macos/Build/Products/Release/${{ env.APP_NAME }}.app build/macos/${{ env.APP_NAME }}.dmg
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: macos_${{ env.APP_NAME }}
  #         path: build/macos/${{ env.APP_NAME }}.dmg

  # macos_arm:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         architecture: arm64
  #     - run: flutter config --enable-macos-desktop
  #     - run: flutter build macos --release
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: macos_arm64_${{ env.APP_NAME }}
  #         path: build/macos/Build/Products/Release/${{ env.APP_NAME }}.app/Contents